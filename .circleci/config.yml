# ref: https://github.com/palantir/conjure-rust/blob/master/.circleci/config.yml
version: 2.1

orbs:
  win: circleci/windows@1.0.0

executors:
  rust:
    docker: [{ image: rust:1.41.0 }]

commands:
  restore_target:
    parameters:
      job:
        type: string
    steps:
      - run: rustc --version > ~/rust-version
      - restore_cache: { key: '<< parameters.job >>-target-{{ checksum "Cargo.lock" }}-{{ checksum "~/rust-version" }}' }
  save_target:
    parameters:
      job:
        type: string
    steps:
      - run: rustc --version > ~/rust-version
      - save_cache:
          key: << parameters.job >>-target-{{ checksum "Cargo.lock" }}-{{ checksum "~/rust-version" }}
          paths: [target]

jobs:
  checkout:
    executor: rust
    steps:
      - checkout
      - restore_cache: { key: registry }
      - run: cargo generate-lockfile
      - restore_cache: { key: 'deps-{{ checksum "Cargo.lock" }}' }
      - run: cargo fetch
      - save_cache:
          key: registry-{{ .BuildNum }}
          paths: [/usr/local/cargo/registry/index]
      - save_cache:
          key: deps-{{ checksum "Cargo.lock" }}
          paths:
            - /usr/local/cargo/registry/cache
            - /usr/local/cargo/registry/src
      - persist_to_workspace:
          root: /
          paths:
            - root/project
            - usr/local/cargo/registry

  test:
    executor: rust
    environment:
      RUSTFLAGS: -D warnings
    steps:
      - attach_workspace: { at: / }
      - run: rustup component add clippy rustfmt
      - restore_target: { job: test }
      - run: cargo clippy --all --all-targets
      - run: cargo fmt --all -- --check
      - run: cargo test --all --all-features
      - run: |
          ./regenerate.sh
          if [[ -n "$(git status --porcelain)" ]]; then
            git status
            exit 1
          fi
      - save_target: { job: test }

  test-on-linux:
    executor: rust
    steps:
      - attach_workspace: { at: / }
      - run: apt-get update
      - run: apt-get install -y musl-tools
      - run: rustup target add x86_64-unknown-linux-musl
      - restore_target: { job: test-on-linux }
      - run: |
          cargo test --verbose --all --no-default-features --features default -- --exact --nocapture --test-threads=1
          cargo build --release --target x86_64-unknown-linux-musl
      #- run: strip target/x86_64-unknown-linux-musl/release/binary
      - save_target: { job: test-on-linux }
      - persist_to_workspace:
          root: /
          paths: root/project/target/x86_64-unknown-linux-musl/release/*smolsocket*

#  # macos is not included free version
#  test-on-macos:
#    macos:
#      xcode: 10.1.0
#    environment:
#      RUSTUP_HOME: /Users/distiller/usr/local/rustup
#      CARGO_HOME: /Users/distiller/usr/local/cargo
#    working_directory: /Users/distiller/root/project
#    steps:
#      - attach_workspace: { at: /Users/distiller }
#      - run: curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path --default-toolchain 1.41.0
#      - run: sudo ln -s $CARGO_HOME/bin/* /usr/local/bin
#      - restore_target: { job: test-on-macos }
#      - run: |
#          cargo test --verbose --all --no-default-features --features default -- --exact --nocapture --test-threads=1
#          cargo build --release --target x86_64-apple-darwin
#      #- run: strip target/x86_64-apple-darwin/release/binary
#      - save_target: { job: test-on-macos }
#      - persist_to_workspace:
#          root: /Users/distiller
#          paths: root/project/target/x86_64-apple-darwin/release/*smolsocket*

  test-on-windows:
    executor: win/vs2019
    working_directory: C:\Users\circleci\root\project
    environment:
      CARGO_HOME: C:\Users\circleci\usr\local\cargo
    steps:
      - attach_workspace: { at: C:\Users\circleci }
      - run: |
          $progressPreference = "silentlyContinue"
          Invoke-WebRequest "https://static.rust-lang.org/dist/rust-1.41.0-x86_64-pc-windows-msvc.exe" -outfile rust.exe
      - run: .\rust.exe /VERYSILENT /NORESTART /DIR="C:\Program Files\Rust"
      - run: |
          $env:Path += ";C:\Program Files\Rust\bin"
          cargo test --verbose --all --no-default-features --features default -- --exact --nocapture --test-threads=1
          cargo build --release --target x86_64-pc-windows-msvc
      - persist_to_workspace:
          root: C:\Users\circleci
          paths: root\project\target\x86_64-pc-windows-msvc\release\*smolsocket*

  publish:
    executor: rust
    steps:
      - attach_workspace: { at: / }
      - run: |
          echo "publish to crates.io"

workflows:
  version: 2
  main:
    jobs:
      - checkout:
          filters: { tags: { only: /.*/ } }
      - test:
          requires: [checkout]
          filters: { tags: { only: /.*/ } }
      - test-on-linux:
          requires: [checkout]
          filters:
            tags: { only: /.*/ }
            branches: { ignore: /.*/ }
      - test-on-macos:
          requires: [checkout]
          filters:
            tags: { only: /.*/ }
            branches: { ignore: /.*/ }
      - test-on-windows:
          requires: [checkout]
          filters:
            tags: { only: /.*/ }
            branches: { ignore: /.*/ }
      - publish:
          # requires: [test, test-on-linux, test-on-macos, test-on-windows]
          requires: [test, test-on-linux, test-on-windows]
          filters:
            tags: { only: /.*/ }
            branches: { ignore: /.*/ }
